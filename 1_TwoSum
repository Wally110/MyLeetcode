// https://leetcode.com/problems/two-sum/description/
// Given an array of integers, return indices of the two numbers such that they add up to a specific target.
// You may assume that each input would have exactly one solution, and you may not use the same element twice.

C++:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector<int> res;
        map<int,int> index;
        for(int i=0;i<n;i++){
            if(index.count(nums[i])!=0){
                res.push_back(index[nums[i]]);
                res.push_back(i);
            }
            index[target-nums[i]]=i;
        }
        return res;
    }
};

Java:
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] res = new int[2];
        int len = nums.length;
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>(len);
        for(int i=0;i<len;i++){
            if(map.containsKey(nums[i])){
                res[0]=map.get(nums[i]);
                res[1]=i;
                break;
            }
            map.put(target-nums[i],i);
        }
        return res;
    }
}
