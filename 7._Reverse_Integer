// https://leetcode.com/problems/reverse-integer/description/
// Given a 32-bit signed integer, reverse digits of an integer.
// Assume we are dealing with an environment which could only hold integers within the 32-bit signed integer range. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

C++:
class Solution {
public:
    int reverse(int x) {
        int sign = (x==abs(x)? 1:-1);
        x=abs(x);
        vector<int> s;
        long long output=0;
        int count=0;
        int flag=0;
        while(x!=0){
            if(x%10!=0||flag){
                s.push_back(x%10);
                flag=1;
            }
            x /= 10;
        }
        for(int i=0;i<s.size();i++){
            output *= 10;
            output += s[i];
        }
        long long op=output;
        for(count=0;op!=0;count++){
            op /= 2;
        }
        if(count > 31)
            return 0;
        else
            return (sign==1? output: (-1)*output);
    }
};
